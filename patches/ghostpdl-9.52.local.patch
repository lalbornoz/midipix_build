diff -ru ghostpdl-9.52.orig/base/fapi_ft.c ghostpdl-9.52/base/fapi_ft.c
--- ghostpdl-9.52.orig/base/fapi_ft.c   2020-03-19 09:14:27.000000000 +0100
+++ ghostpdl-9.52/base/fapi_ft.c        2021-07-17 14:35:25.268233596 +0200
@@ -125,7 +125,7 @@
 delete_inc_int_info(gs_fapi_server * a_server,
                     FT_IncrementalRec * a_inc_int_info);

-FT_CALLBACK_DEF(void *)
+static void *
 FF_alloc(FT_Memory memory, long size)
 {
     gs_memory_t *mem = (gs_memory_t *) memory->user;
@@ -133,7 +133,7 @@
     return (gs_malloc(mem, size, 1, "FF_alloc"));
 }

-FT_CALLBACK_DEF(void *)
+static void *
     FF_realloc(FT_Memory memory, long cur_size, long new_size, void *block)
 {
     gs_memory_t *mem = (gs_memory_t *) memory->user;
@@ -153,7 +153,7 @@
     return (tmp);
 }

-FT_CALLBACK_DEF(void)
+static void
     FF_free(FT_Memory memory, void *block)
 {
     gs_memory_t *mem = (gs_memory_t *) memory->user;
diff -ru ghostpdl-9.52.orig/configure ghostpdl-9.52/configure
--- ghostpdl-9.52.orig/configure        2020-06-05 13:19:23.032760767 +0200
+++ ghostpdl-9.52/configure     2020-06-05 13:18:58.367780811 +0200
@@ -7566,9 +7566,6 @@
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for local zlib source" >&5
 $as_echo_n "checking for local zlib source... " >&6; }
-# we must define ZLIBDIR regardless because png.mak does a -I$(ZLIBDIR)
-# this seems a harmless default
-ZLIBDIR=src
 AUX_SHARED_ZLIB=
 ZLIBCFLAGS=""
 
@@ -10957,7 +10954,7 @@
   enableval=$enable_dynamic;
   if test "x$enable_dynamic" != xno; then
     case $host in
-      *-linux*|*-gnu)
+      *-linux*|*-gnu|*-midipix*)
         INSTALL_SHARED="install-shared"
         if test "x$X_DEVS" != x; then
                 DYNAMIC_DEVS="\$(GLOBJDIR)/X11.so"
diff -ru ghostscript-9.26.orig/devices/devs.mak ghostscript-9.26/devices/devs.mak
--- ghostscript-9.26.orig/devices/devs.mak	2018-11-20 11:08:19.000000000 +0100
+++ ghostscript-9.26/devices/devs.mak	2019-03-25 16:52:13.774662402 +0100
@@ -308,7 +308,7 @@
 
 # See the main makefile for the definition of XLIBDIRS and XLIBS.
 x11_=$(DEVOBJ)gdevx.$(OBJ) $(DEVOBJ)gdevxcmp.$(OBJ) $(DEVOBJ)gdevxini.$(OBJ)\
- $(DEVOBJ)gdevxres.$(OBJ) $(DEVOBJ)gsparamx.$(OBJ)
+ $(DEVOBJ)gdevxres.$(OBJ) $(DEVOBJ)gsparamx.$(OBJ) $(DEVOBJ)gsparam.$(OBJ) $(DEVOBJ)gdevnfwd.$(OBJ)
 $(DD)x11_.dev : $(x11_) $(GLD)bboxutil.dev $(GDEV) $(DEVS_MAK) $(MAKEDIRS)
 	$(SETMOD) $(DD)x11_ $(x11_)
 	$(ADDMOD) $(DD)x11_ -link $(XLIBDIRS)
--- /dev/null                                     2019-05-07 18:48:18.199999973 -0400
+++ ghostscript-9.26/arch/x86_64-nt64-midipix.h   2019-05-09 22:02:33.196268736 -0400
@@ -0,0 +1,31 @@
+#define ARCH_ALIGN_SHORT_MOD 2
+#define ARCH_ALIGN_INT_MOD 4
+#define ARCH_ALIGN_LONG_MOD 8
+#define ARCH_ALIGN_PTR_MOD 8
+#define ARCH_ALIGN_FLOAT_MOD 4
+#define ARCH_ALIGN_DOUBLE_MOD 8
+
+#define ARCH_LOG2_SIZEOF_CHAR 0
+#define ARCH_LOG2_SIZEOF_SHORT 1
+#define ARCH_LOG2_SIZEOF_INT 2
+#define ARCH_LOG2_SIZEOF_LONG 3
+#define ARCH_LOG2_SIZEOF_LONG_LONG 3
+#define ARCH_SIZEOF_GX_COLOR_INDEX 8
+#define ARCH_SIZEOF_PTR 8
+#define ARCH_SIZEOF_FLOAT 4
+#define ARCH_SIZEOF_DOUBLE 8
+#define ARCH_FLOAT_MANTISSA_BITS 24
+#define ARCH_DOUBLE_MANTISSA_BITS 53
+
+#define ARCH_MAX_UCHAR ((unsigned char)0xff + (unsigned char)0)
+#define ARCH_MAX_USHORT ((unsigned short)0xffff + (unsigned short)0)
+#define ARCH_MAX_UINT ((unsigned int)~0 + (unsigned int)0)
+#define ARCH_MAX_ULONG ((unsigned long)~0L + (unsigned long)0)
+
+#define ARCH_IS_BIG_ENDIAN 0
+#define ARCH_PTRS_ARE_SIGNED 0
+#define ARCH_FLOATS_ARE_IEEE 1
+#define ARCH_ARITH_RSHIFT 2
+#define ARCH_DIV_NEG_POS_TRUNCATES 1
+#define ARCH_SIZEOF_SIZE_T 8
+#define ARCH_MAX_SIZE_T ((size_t)~0L + (size_t)0)
